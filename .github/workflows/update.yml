name: Check Repo Tags
on:
  schedule:
    - cron: "0 0 * * *" # Daily check
  workflow_dispatch:

env:
  TARGET_REPO: https://github.com/henrygd/beszel.git

jobs:
  update-repo-tag:
    runs-on: ubuntu-latest
    permissions: # Job-level permissions configuration starts here
      contents: write # 'write' access to repository contents
      pull-requests: write # 'write' access to pull requests
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        # with:
        #   submodules: "recursive"

      - name: Get Latest Tag
        id: get-tag
        run: |
          LATEST_TAG=$(git ls-remote --tags --sort=-v:refname ${{ env.TARGET_REPO }} | grep -vF '{}' | grep -v -- '-pre$' | head -n1 | awk -F/ '{print $3}')
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Check tag
        id: check-tag
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

          CURRENT_TAG=$(cat VERSION.txt)
          LATEST_TAG=$(echo ${{ steps.get-tag.outputs.latest_tag }})

          echo "current=$CURRENT_TAG"
          echo "latest=$LATEST_TAG"

          if [ "$CURRENT_TAG" != "$LATEST_TAG" ]; then
            echo "${{ env.TARGET_REPO }} updated:"
            echo "  From: $CURRENT_TAG"
            echo "  To:   $LATEST_TAG"
            echo "repo_updated=true" >> $GITHUB_OUTPUT
          else
            echo "${{ env.TARGET_REPO }} already up-to-date $CURRENT_TAG"
            echo "repo_updated=false" >> $GITHUB_OUTPUT
          fi

      - name: Create files for upload
        run: |
          mkdir data
          echo ${{ steps.get-tag.outputs.latest_tag }} > data/latest_tag
          echo ${{ steps.check-tag.outputs.repo_updated }} > data/repo_updated

      - name: Update files
        uses: actions/upload-artifact@v4
        with:
          name: repo-data
          path: data
